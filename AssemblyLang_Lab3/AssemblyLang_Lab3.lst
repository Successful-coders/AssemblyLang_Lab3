Microsoft (R) Macro Assembler Version 14.27.29112.0	    11/26/20 17:37:08
main.asm						     Page 1 - 1


				.386
				.model flat

 00000000			.data
 00000000 3E6147AE			x				dd 0.22			; xi, x0 = 0,22
 00000004 3FE66666			const1			dd 1.8			; константа для вычисления ф-ии
 00000008 41200000			const2			dd 10.0			; константа для вычисления ф-ии
 0000000C 40E66666			deriv1Const1	dd 7.2			; константа для вычисления первой производной ф-ии
 00000010 41ACCCCD			deriv2Const1	dd 21.6			; константа для вычисления второй производной ф-ии
 00000014 42C80000			deriv2Const2	dd 100.0		; константа для вычисления второй производной ф-ии
 00000018 40000000			two				dd 2.0			; двойка
 0000001C 00000000			accuracy		dd ?			; точность вычисления
 00000020 00000000			iterCountAdr    dd ?			; адрес переменной для количества итераций
 00000024				y				dq ?			; значение ф-ии в точке
	   0000000000000000
 0000002C				buf				dq ?			; для хранения y при вычислениях
	   0000000000000000

 00000000			.code
 00000000				_findSolve@8 proc
 00000000  55					push	ebp
 00000001  8B EC				mov		ebp, esp

 00000003  8B 45 08				mov		eax, [ebp]+8		; извлекаем точность
 00000006  A3 0000001C R			mov		accuracy, eax	 

 0000000B  8B 45 0C				mov		eax, [ebp]+12		; извлекаем адрес переменной для кол-ва итераций 
 0000000E  A3 00000020 R			mov		iterCountAdr, eax

 00000013  33 DB				xor		ebx, ebx			; обнуляем счетчик итераций

 00000015  9B DB E3				finit						; инициализация сопроцессора

 00000018  BA 00000001				mov		edx, 1				; edx != 0, значит не бесконечность

 0000001D					main:
 0000001D  E8 0000009F					call	func		; y = f(x)

 00000022  83 FA 00					cmp		edx, 0
 00000025  75 03					jnz		notInf		; если в edx != 0, то при вычислении не возникла бесконечность 
 00000027  4B						dec		ebx
 00000028  EB 32					jmp		exit

 0000002A					notInf:
 0000002A  DD 05 00000024 R				fld		y			; st(0) = f(x)
 00000030  D9 EE					fldz				; st(0) = 0,   st(1) = f(x)
 00000032  DE D9					fcompp				; 0 <?> f(x), затем убираются из стека
 00000034  9B DF E0					fstsw	ax			; загрузка флагов в ax
 00000037  9E						sahf				; загрузка флагов в eflags
 00000038  73 02					jnc		negative	; если 0 > f(x), меняем знак f(x)
 0000003A  EB 08					jmp		positive	; иначе, не менять знак

 0000003C					negative:
 0000003C  DD 05 00000024 R				fld		y			; st(0) = f(x)
 00000042  D9 E0					fchs				; st(0) = -f(x)

 00000044					positive:
 00000044  D9 05 0000001C R				fld		accuracy	; st(0) = accuracy, st(1) = |f(x)|
 0000004A  DE D9					fcompp				; accuracy <?> |f(x)|, затем убираются из стека
 0000004C  9B DF E0					fstsw	ax  		; загрузка флагов в ax
 0000004F  9E						sahf				; загрузка флагов в eflags
 00000050  72 02					jc		cycle		; если accuracy < |f(x)|, то нужна большая точность и еще итерация
 00000052  EB 08					jmp		exit		; иначе, выход

 00000054					cycle: 
 00000054  E8 00000012					call	iter
 00000059  43						inc		ebx			; увеличиваем количество итераций
 0000005A  75 C1				jne main

 0000005C					exit:	
 0000005C  A1 00000020 R				mov		eax, iterCountAdr
 00000061  89 18					mov		[eax], ebx			; сохраняем количество итераций
 00000063  D9 05 00000000 R				fld		x					; st(0) = x - возвращаемое значение 

 00000069  5D						pop		ebp
 0000006A  C3						ret
 0000006B				_findSolve@8 endp


 0000006B				iter proc
 0000006B  DD 05 00000024 R			fld		y				; st(0) = f(x)
 00000071  E8 000000B1				call	funcDerivative2	; st(0) = f"(x), st(1) = f(x)
 00000076  DE C9				fmulp					; st(0) = f(x)*f"(x)

 00000078  E8 00000077				call	funcDerivative1	; st(0) = f'(x)
 0000007D  D9 C0				fld		st(0)			; st(0) = f'(x), st(1) = f'(x)
						;call	funcDerivative1	; st(0) = f'(x)
 0000007F  DE C9				fmulp					; st(0) = (f'(x))^2
 00000081  D9 05 00000018 R			fld		two				; st(0) = 2
 00000087  DE C9				fmulp					; st(0) = 2*(f'(x))^2

 00000089  DE F9				fdivp	st(1), st(0)	; st(0) = f(x)*f"(x) / 2*(f'(x))^2

 0000008B  D9 E8				fld1					; st(0) = 1, st(1) = f(x)*f"(x) / 2*(f'(x))^2
 0000008D  DE E1				fsubrp					; st(0) = 1 - f(x)*f"(x) / 2*(f'(x))^2

 0000008F  D9 E8				fld1					; st(0) = 1
 00000091  DE F1				fdivrp					; st(0) = (1 - f(x)*f"(x) / 2*(f'(x))^2)^-1

 00000093  DD 05 00000024 R			fld		y				; st(0) = f(x)
 00000099  E8 00000056				call	funcDerivative1	; st(0) = f'(x), st(1) = f(x)
 0000009E  DE F9				fdivp					; st(0) = f(x) / f'(x), st(1) = (1 - f(x)*f"(x) / 2*(f'(x))^2)^-1
 000000A0  DE C9				fmulp					; st(0) = (f(x) / f'(x)) * ((1 - f(x)*f"(x) / 2*(f'(x))^2)^-1)

 000000A2  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = (f(x) / f'(x)) * ((1 - f(x)*f"(x) / 2*(f'(x))^2)^-1)
 000000A8  DE E1				fsubrp					; st(0) = x - (f(x) / f'(x)) * ((1 - f(x)*f"(x) / 2*(f'(x))^2)^-1)

									; проверка на бесконечность
 000000AA  D9 E5				fxam
 000000AC  9B DF E0				fstsw ax	; загрузка флагов в ax
 000000AF  9E					sahf		; загрузка флагов в eflags

 000000B0  74 08				jz		continue
 000000B2  7B 06				jnp		continue
 000000B4  73 04				jnc		continue 
											; если zf = 0, pf = 1, cf = 1, то результат - бесконечность
 000000B6  33 D2				xor		edx, edx	; edx = 0 обработаем вне функции, как бесконечность
 000000B8  EB 06				jmp		exit

						; если один из флагов другой, то продолжаем обычную обработку
 000000BA				continue:
 000000BA  D9 1D 00000000 R			fstp	x	; x = st(0)

 000000C0				exit:
 000000C0  C3					ret
 000000C1				iter endp



					; y = 1.8x^4 - sin(10x); f(x=0.22) = -0.80427
 000000C1				func proc
 000000C1  D9 05 00000004 R			fld		const1			; st(0) = 1.8
 000000C7  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = 1.8
 000000CD  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = x, st(2) = 1.8
 000000D3  DC C9				fmul	st(1), st(0)	; st(0) = x, st(1) = x^2, st(2) = 1.8
 000000D5  DC C9				fmul	st(1), st(0)	; st(0) = x, st(1) = x^3, st(2) = 1.8
 000000D7  DE C9				fmulp					; st(0) = x^4, st(1) = 1.8
 000000D9  DE C9				fmulp					; st(0) = 1.8*x^4

 000000DB  D9 05 00000008 R			fld		const2			; st(0) = 10, st(1) = 1.8*x^4
 000000E1  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = 10, st(2) = 1.8*x^4
 000000E7  DE C9				fmulp					; st(0) = 10x, st(1) = 1.8*x^4
 000000E9  D9 FE				fsin					; st(0) = sin(10x), st(1) = 1.8*x^4

 000000EB  DE E9				fsubp					; st(0) = 1.8*x^4 - sin(10x)

 000000ED  DD 1D 00000024 R			fstp	y				; y = st(0) = 1.8*x^4 - sin(10x)

 000000F3  C3					ret
 000000F4				func endp

					; y' = 7.2x^3 - 10*sin(10x) = f'(x)
 000000F4				funcDerivative1 proc
 000000F4  D9 05 0000000C R			fld		deriv1Const1	; st(0) = 7.2
 000000FA  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = 7.2
 00000100  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = x, st(2) = 7.2
 00000106  DC C9				fmul	st(1), st(0)	; st(0) = x, st(1) = x^2, st(2) = 7.2
 00000108  DE C9				fmulp					; st(0) = x^3, st(1) = 7.2
 0000010A  DE C9				fmulp					; st(0) = 7.2*x^3

 0000010C  D9 05 00000008 R			fld		const2			; st(0) = 10, st(1) = 7.2*x^3
 00000112  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = 10, st(2) = 7.2*x^3
 00000118  DE C9				fmulp					; st(0) = 10x, st(1) = 7.2*x^3
 0000011A  D9 FF				fcos					; st(0) = cos(10x), st(1) = 7.2*x^3
 0000011C  D9 05 00000008 R			fld		const2			; st(0) = 10, st(1) = cos(10x), st(2) = 7.2*x^3
 00000122  DE C9				fmulp					; st(0) = 10*cos(10x), st(1) = 7.2*x^3

 00000124  DE E9				fsubp					; st(0) = 7.2*x^3 - 10*cos(10x)

 00000126  C3					ret
 00000127				funcDerivative1 endp

					; y" = 21.6x^3 + 100*sin(10x) = f"(x)
 00000127				funcDerivative2 proc
 00000127  D9 05 00000010 R			fld		deriv2Const1	; st(0) = 21.6
 0000012D  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = 21.6
 00000133  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = x, st(2) = 21.6
 00000139  DE C9				fmulp					; st(0) = x^2, st(1) = 21.6
 0000013B  DE C9				fmulp					; st(0) = 21.6*x^2

 0000013D  D9 05 00000008 R			fld		const2			; st(0) = 10, st(1) = 21.6*x^2
 00000143  D9 05 00000000 R			fld		x				; st(0) = x, st(1) = 10, st(2) = 21.6*x^2
 00000149  DE C9				fmulp					; st(0) = 10x, st(1) = 21.6*x^2
 0000014B  D9 FE				fsin					; st(0) = sin(10x), st(1) = 21.6*x^2
 0000014D  D9 05 00000014 R			fld		deriv2Const2	; st(0) = 100, st(1) = sin(10x), st(2) = 21.6*x^2
 00000153  DE C9				fmulp					; st(0) = 100*sin(10x), st(1) = 21.6*x^2

 00000155  DE C1				faddp					; st(0) = 21.6*x^2 + 100*sin(10x)

 00000157  C3					ret
 00000158				funcDerivative2 endp
				end
Microsoft (R) Macro Assembler Version 14.27.29112.0	    11/26/20 17:37:08
main.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000034 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000158 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_findSolve@8 . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000006B Public
  main . . . . . . . . . . . . .	L Near	 0000001D _TEXT	
  notInf . . . . . . . . . . . .	L Near	 0000002A _TEXT	
  negative . . . . . . . . . . .	L Near	 0000003C _TEXT	
  positive . . . . . . . . . . .	L Near	 00000044 _TEXT	
  cycle  . . . . . . . . . . . .	L Near	 00000054 _TEXT	
  exit . . . . . . . . . . . . .	L Near	 0000005C _TEXT	
funcDerivative1  . . . . . . . .	P Near	 000000F4 _TEXT	Length= 00000033 Public
funcDerivative2  . . . . . . . .	P Near	 00000127 _TEXT	Length= 00000031 Public
func . . . . . . . . . . . . . .	P Near	 000000C1 _TEXT	Length= 00000033 Public
iter . . . . . . . . . . . . . .	P Near	 0000006B _TEXT	Length= 00000056 Public
  continue . . . . . . . . . . .	L Near	 000000BA _TEXT	
  exit . . . . . . . . . . . . .	L Near	 000000C0 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
accuracy . . . . . . . . . . . .	DWord	 0000001C _DATA	
buf  . . . . . . . . . . . . . .	QWord	 0000002C _DATA	
const1 . . . . . . . . . . . . .	DWord	 00000004 _DATA	
const2 . . . . . . . . . . . . .	DWord	 00000008 _DATA	
deriv1Const1 . . . . . . . . . .	DWord	 0000000C _DATA	
deriv2Const1 . . . . . . . . . .	DWord	 00000010 _DATA	
deriv2Const2 . . . . . . . . . .	DWord	 00000014 _DATA	
iterCountAdr . . . . . . . . . .	DWord	 00000020 _DATA	
two  . . . . . . . . . . . . . .	DWord	 00000018 _DATA	
x  . . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
y  . . . . . . . . . . . . . . .	QWord	 00000024 _DATA	

	   0 Warnings
	   0 Errors
